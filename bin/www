#!/usr/bin/env node

const cluster = require('cluster');
const http = require('http');
const numCPUs = require('os').cpus().length;


const Server = require('../src/server');
const port = normalizePort(process.env.PORT || '8080');

if (cluster.isMaster) {
  console.log(`Master ${process.pid} is running`);

  // Fork workers.
  for (let i = 0; i < numCPUs; i++) {
    cluster.fork();
  }

  cluster.on('exit', (worker, code, signal) => {
    console.log(`Worker ${worker.process.pid} died`);
  });
} else {
  new Server().listen(port)
  console.log(`Worker ${process.pid} started`);
}

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}
